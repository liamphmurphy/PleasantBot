[{"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/index.js":"1","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/App.js":"2","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/serviceWorker.js":"3","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Help.js":"4","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Commands.js":"5","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Login.js":"6","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Quotes.js":"7","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Dashboard.js":"8","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/custom/DeleteCommand.js":"9","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/custom/AddCommand.js":"10","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/services/Auth.js":"11"},{"size":481,"mtime":1609527930982,"results":"12","hashOfConfig":"13"},{"size":2322,"mtime":1610982165893,"results":"14","hashOfConfig":"13"},{"size":5086,"mtime":1609527931029,"results":"15","hashOfConfig":"13"},{"size":413,"mtime":1609528004870,"results":"16","hashOfConfig":"13"},{"size":4102,"mtime":1609528004787,"results":"17","hashOfConfig":"13"},{"size":413,"mtime":1610725102123,"results":"18","hashOfConfig":"13"},{"size":3659,"mtime":1609528004962,"results":"19","hashOfConfig":"13"},{"size":2500,"mtime":1610725308013,"results":"20","hashOfConfig":"13"},{"size":1256,"mtime":1609528005089,"results":"21","hashOfConfig":"13"},{"size":3357,"mtime":1609528005021,"results":"22","hashOfConfig":"13"},{"size":813,"mtime":1610982031354,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"f01nlr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/index.js",[],["50","51"],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/App.js",["52"],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/serviceWorker.js",[],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Help.js",[],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Commands.js",["53"],"import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport AddCommand from './custom/AddCommand';\nimport DeleteCommand from './custom/DeleteCommand';\n\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nconst { SearchBar } = Search;\n\nconst axios = require('axios').default;\n\nclass Commands extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: true,\n      commands: []\n    }\n\n    this.getCommands = this.getCommands.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnSelectAll = this.handleOnSelectAll.bind(this);\n\n    this.selectedRows = [] // stores any rows selected\n  }\n\n\n  componentDidMount() {\n    this.getCommands()\n  }\n\n  // used to reload the commands table when operations are performed\n  getCommands() {\n    axios.get(\"http://\" + window.location.hostname + \":8080/getcoms\").then((response) => {\n      this.setState({loaded: true, commands: response.data})\n    }).catch(function(error) {\n      this.setState({loaded: false})\n      console.log(error)\n    });\n  }\n\n  // facilitates operations for selecting / deselecting rows and updating this.selectedRows\n  handleOnSelect(row, isSelect) {\n    if (isSelect){ // used to see if row is actually selected\n      this.selectedRows.push(row.name) // add command to \n    } else {\n      var index = this.selectedRows.indexOf(row.name)\n      this.selectedRows.splice(index, 1)\n    }\n  }\n\n  handleOnSelectAll(isSelect, rows) {\n    if (isSelect) {\n      for (const [index, com] of rows.entries()) {\n        console.log(com)\n        this.selectedRows.push(com.name)\n      }\n    }\n  }\n\n\n\n  render() {\n    const {loaded, commands} = this.state;\n\n    const arr = []\n\n    // turns object into an array, easier to manipulate\n    Object.keys(commands).forEach(key => arr.push({name: key, value: commands[key]}))\n    const columns = [{dataField: 'name', text: 'Command Name', sort: true}, \n                    {dataField: 'value.Response', text: 'Command Response'},\n                    {dataField: 'value.Perm', text: 'Command Permissions'}];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selected: this.state.selected,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll,\n      style: { backgroundColor: \"#007bff\", color: \"#FFFFFF\" }\n    };\n\n    \n\n    if (loaded) { // indicates that the bot may not be running\n      return (\n          <ToolkitProvider bootstrap4 keyField=\"name\" data={ arr } columns={ columns } search>\n            { props => (\n              <Container fluid>\n                <Row>\n                  <Col>\n                    <b>Commands</b>\n                    <hr />\n                    <Row>\n                      <Col md={8}>\n                        <div className=\"search\">\n                          <SearchBar { ...props.searchProps } />\n                        </div>\n                      </Col>\n                      <Col md={4}>\n                        <DeleteCommand selectedRows={ this.selectedRows } getCommands={ this.getCommands.bind(this) }/>\n                      </Col>\n                    </Row>\n                    <br />\n                    <BootstrapTable { ...props.baseProps } boostrap4 selectRow={selectRow} pagination={ paginationFactory() }/>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <AddCommand getCommands={ this.getCommands.bind(this) }/>\n                  </Col>\n                </Row>\n              </Container>\n          )}\n          </ToolkitProvider>\n      );\n    } else {\n      return <h1>ERROR. Please ensure the bot is running.</h1>;\n    }\n  }\n}\n\nexport default Commands;\n","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Login.js",[],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Quotes.js",["54"],"import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nconst { SearchBar } = Search;\n\nconst axios = require('axios').default;\n\nclass Quotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: []\n    }\n\n    this.getQuotes = this.getQuotes.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnSelectAll = this.handleOnSelectAll.bind(this);\n\n    this.selectedRows = [] // stores any rows selected\n  }\n\n\n  componentDidMount() {\n    this.getQuotes()\n  }\n\n  // used to reload the commands table when operations are performed\n  getQuotes() {\n    axios.get(\"http://\" + window.location.hostname + \":8080/getquotes\").then((response) => {\n      this.setState({quotes: response.data})\n    }).catch(function(error) {\n      console.log(error)\n    });\n  }\n\n  // facilitates operations for selecting / deselecting rows and updating this.selectedRows\n  handleOnSelect(row, isSelect) {\n    if (isSelect){ // used to see if row is actually selected\n      this.selectedRows.push(row.name) // add command to \n    } else {\n      var index = this.selectedRows.indexOf(row.name)\n      this.selectedRows.splice(index, 1)\n    }\n  }\n\n  handleOnSelectAll(isSelect, rows) {\n    if (isSelect) {\n      for (const [index, com] of rows.entries()) {\n        console.log(com)\n        this.selectedRows.push(com.name)\n      }\n    }\n  }\n\n\n\n  render() {\n    const {quotes} = this.state;\n\n    // turns object into an array, easier to manipulate\n    console.log(quotes)\n    const arr = []\n\n    // turns object into an array, easier to manipulate\n    Object.keys(quotes).forEach(key => arr.push({id: key, value: quotes[key]}))\n    const columns = [{dataField: 'id', text: 'ID', sort: true}, \n                    {dataField: 'value.Quote', text: 'Quote'},\n                    {dataField: 'value.Timestamp', text: 'Timestamp'},\n                    {dataField: 'value.Submitter', text: 'Submitter'} ];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selected: this.state.selected,\n      onSelect: this.handleOnSelect,\n      onSelectAll: this.handleOnSelectAll,\n      style: { backgroundColor: \"#007bff\", color: \"#FFFFFF\" }\n    };\n\n    \n\n    return (\n        <ToolkitProvider bootstrap4 keyField=\"id\" data={ arr } columns={ columns } search>\n          { props => (\n            <Container fluid>\n              <Row>\n                <Col>\n                  <b>Quotes</b>\n                  <hr />\n                  <Row>\n                    <Col md={8}>\n                      <div className=\"search\">\n                        <SearchBar { ...props.searchProps } />\n                      </div>\n                    </Col>\n                    <Col md={4}>\n                      \n                    </Col>\n                  </Row>\n                  <br />\n                  <BootstrapTable { ...props.baseProps } boostrap4 selectRow={selectRow} pagination={ paginationFactory() }/>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  \n                </Col>\n              </Row>\n            </Container>\n        )}\n        </ToolkitProvider>\n    );\n  }\n}\n\nexport default Quotes;\n","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/Dashboard.js",["55"],"import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Login from './Login';\n\n\n\nconst axios = require('axios').default;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: true,\n      bans: [],\n      stats: []\n    }\n  }\n\n\n  componentDidMount() {\n    axios.get(\"http://\" + window.location.hostname + \":8080/getbanhistory\").then((response) => {\n      this.setState({loaded: true, bans: response.data})\n    }).catch(function(error) {\n      //this.setState({loaded: false})\n      console.log(error)\n    });\n\n    axios.get(\"http://\" + window.location.hostname + \":8080/getstats\").then((response) => {\n      this.setState({stats: response.data})\n    }).catch(function(error) {\n      //this.setState({loaded: false})\n      console.log(error)\n    });\n  }\n\n  render() {\n    const {loaded, bans} = this.state;\n\n    const columns = [{dataField: 'User', text: 'Username'}, \n                    {dataField: 'Reason', text: 'Reason'},\n                    {dataField: 'Timestamp', text: 'Timestamp'}];\n    if (loaded) { // indicates that the bot may not be running\n      return (\n        <Container fluid>\n          <Row>\n            <Col>\n              <b>Quick Stats</b>\n              <p>Commands: {this.state.stats.Commands}</p>\n              <p>Quotes: {this.state.stats.Quotes}</p>\n              <p>Bans: {this.state.stats.Bans}</p>\n            </Col>\n            <Col>\n                <b>Top Command</b>\n                <br />\n                <p>{this.state.stats.TopCommand}: {this.state.stats.TopComCount}</p>\n\n                <b>Top Chatter</b>\n                <br />\n                <p>{this.state.stats.TopChatter}: {this.state.stats.TopChatCount}</p>\n            </Col>\n          </Row>\n          <Row>\n          <Col>\n              <b>Ban History</b>\n              <BootstrapTable bootstrap4 keyField='name' data={bans} columns={columns} pagination={ paginationFactory() }/>\n            </Col>\n          </Row>\n        </Container>\n      );\n    } else {\n      return <h1>ERROR! Is the bot running?</h1>\n    }\n  }\n}\n\nexport default Dashboard;\n","/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/custom/DeleteCommand.js",[],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/custom/AddCommand.js",[],"/mnt/9018ECA118EC8794/projects/pleasantbot/src/gui/src/services/Auth.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":52,"column":30,"nodeType":"62","messageId":"63","endLine":52,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":62,"column":19,"nodeType":"66","messageId":"67","endLine":62,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":57,"column":19,"nodeType":"66","messageId":"67","endLine":57,"endColumn":24},{"ruleId":"64","severity":1,"message":"68","line":11,"column":8,"nodeType":"66","messageId":"67","endLine":11,"endColumn":13},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","'Login' is defined but never used.","no-global-assign","no-unsafe-negation"]